// ============================================================================
// 全体で使用する関数を定義します。
// ============================================================================

@function strip-units($value) {
    @return $value / ($value * 0 + 1);
}

@function rem-to-px($rem) {
  @return (strip-units($rem) * 10) * 1px;
}

@function mq-get-breakpoint($name, $breakpoints) {
  @if map-has-key($breakpoints, $name) {
    @return map-get($breakpoints, $name);
  } @else {
    @error "Invalid argument: #{$name}.";
  }
}

@function mq-get-media-query($min-name: null, $max-name: null) {
  $min-width: null;
  $max-width: null;

  @if $min-name {
    $min-width: mq-get-breakpoint($min-name, $mq-min-breakpoints);
  }

  @if $max-name {
    $max-width: mq-get-breakpoint($max-name, $mq-max-breakpoints);
  }

  @if $min-width and $max-width {
    @if $min-width < $max-width {
      @return "screen and (min-width: #{$min-width}) and (max-width: #{$max-width})";
    } @else {
      @error "Invalid arguments: $min-name is greater than $max-name.";
    }
  } @else if $min-width {
    @return "screen and (min-width: #{$min-width})";
  } @else if $max-width {
    @return "screen and (max-width: #{$max-width})";
  } @else {
    @error "Invalid arguments: $min-name and $max-name are both null.";
  }
}
